<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="MOD_InputBelt" Id="{2a85e218-1bdb-4ed5-9bd6-698ec9057a87}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MOD_InputBelt
VAR_INPUT
	InputSensor : MOD_InputBelt_I_stSensor;
	OutputSensor : MOD_InputBelt_I_stSensor;
	CommandState : INT;
END_VAR
VAR_OUTPUT
	NewBox : MOD_InputBelt_Q_stRequest;
	BeltMotorOn : MOD_InputBelt_Q_stMotor(MoveLeft := FALSE, MoveRight := FALSE);
	BoxReady : MOD_InputBelt_Q_stOutput;
END_VAR
VAR
	State : INT;
	Executing : BOOL := FALSE;//variable for main state. used for orderly code
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE CommandState OF
	Command.Error:
		BeltMotorOn.MoveLeft := FALSE;
		Executing := FALSE;
		State := 10;//reset state
		
	Command.Executing:
		Executing := TRUE;
		
	Command.Pause:
		Executing := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		
	Command.Reset:
		Executing := FALSE;
		State := 10;//reset state
		BeltMotorOn.MoveLeft := FALSE;
		
	Command.Stop:
		Executing := FALSE;
		State := 10;//reset state
		BeltMotorOn.MoveLeft := FALSE;
		
END_CASE


IF Executing THEN
CASE State OF
	10://startup //reset?
		IF InputSensor.Blocked = TRUE AND OutputSensor.Blocked = TRUE THEN
			State := 11;
		ELSIF InputSensor.Blocked = FALSE AND OutputSensor.Blocked = FALSE THEN
			State := 20;
		ELSIF InputSensor.Blocked = TRUE AND OutputSensor.Blocked = FALSE THEN
			State := 30;
		ELSIF InputSensor.Blocked = FALSE AND OutputSensor.Blocked = TRUE THEN
			State := 40;		
		END_IF
		
	11://startup boxes on belt.
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := TRUE;
	
		IF OutputSensor.Blocked = FALSE THEN
			State := 20;
		END_IF
		
	20://No Box
		NewBox.NewBox := TRUE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := FALSE;
		
		IF InputSensor.Blocked = TRUE AND OutputSensor.Blocked = FALSE THEN
			State := 30;
		END_IF
	
	30://retrieve box
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := TRUE;
		BoxReady.BoxReady := FALSE;
		
		IF InputSensor.Blocked = FALSE AND OutputSensor.Blocked = TRUE THEN
			State := 40;
		END_IF
		
	40://boxready
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := TRUE;
		
		IF OutputSensor.Blocked = FALSE THEN
			State := 20;
		END_IF
(*		
	101://error
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := FALSE;
	
	102://pause
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := FALSE;
		
	103://stop
		NewBox.NewBox := FALSE;
		BeltMotorOn.MoveLeft := FALSE;
		BoxReady.BoxReady := FALSE;
		
	104://reset
	*)

END_CASE
END_IF	]]></ST>
    </Implementation>
    <LineIds Name="MOD_InputBelt">
      <LineId Id="101" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="151" Count="1" />
      <LineId Id="138" Count="1" />
      <LineId Id="150" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="149" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="144" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="79" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="71" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="65" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="73" Count="2" />
      <LineId Id="33" Count="2" />
      <LineId Id="28" Count="1" />
      <LineId Id="36" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="70" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="45" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="47" Count="2" />
      <LineId Id="30" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="84" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="92" Count="1" />
      <LineId Id="88" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="95" Count="1" />
      <LineId Id="90" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="146" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>