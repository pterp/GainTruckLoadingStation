<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="MOD_Crane" Id="{5ef12530-d6be-413c-8970-2208adcc7e82}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MOD_Crane
VAR_INPUT
	i_CraneDownSensor 	: MOD_Crane_I_stSensor;
	i_CraneUpSensor 	: MOD_Crane_I_stSensor;
	i_CraneAboveInput 	: MOD_Crane_I_stSensor;
	i_CraneAboveOutput 	: MOD_Crane_I_stSensor;

	i_Input 			: MOD_Crane_I_stLoad;
	i_LoadGrabbed 		: BOOL;
END_VAR
VAR_OUTPUT
	//right is down left is up
	q_HorizontalMotor 	: MOD_Crane_Q_stMotor;
	q_VerticalMotor 	: MOD_Crane_Q_stMotor;
	q_Grab 				: BOOL;
END_VAR
VAR_IN_OUT
	iq_CommandState 	: INT;
END_VAR
VAR
	State				: INT := 10;
	MotorDirection 		: (Left, Right, Stopped);
	Executing 			: BOOL := FALSE;//variable for main state. used for orderly code		
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE iq_CommandState OF
	Command.Error:
		Executing := FALSE;
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;
		
	Command.Executing:
		Executing := TRUE;
		
	Command.Pause:
		Executing := FALSE;
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;
		
	Command.Reset:
		Executing := FALSE;
		State := 10;//reset state
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;
		
	Command.Stop:
		IF State = 20 THEN
			Executing := FALSE;
			q_VerticalMotor.MoveLeft := FALSE;
			q_VerticalMotor.MoveRight := FALSE;
			q_HorizontalMotor.MoveLeft := FALSE;
			q_HorizontalMotor.MoveRight := FALSE;	
		ELSE
			Executing := TRUE;	
		END_IF
END_CASE


IF Executing THEN
CASE State OF
	10://startup //reset?
		IF i_CraneAboveInput.Blocked THEN
			State := 20;
		ELSE
			State := 90;
		END_IF
		
	20://operational approval
		//wait untill
		IF i_Input.AllowedToOperate = TRUE THEN
			State := 21;
		END_IF
		
	21://check box ready
		//wait untill
		IF i_Input.Ready = TRUE THEN
			State := 30;
		END_IF
	
	30://move crane down
		
		q_VerticalMotor.MoveLeft := TRUE;
		q_VerticalMotor.MoveRight := FALSE;
		
		IF i_CraneDownSensor.Blocked = TRUE THEN
			State := 40;
		END_IF
		
	40://grab the load
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;
		
		q_Grab := TRUE;
		
		IF i_LoadGrabbed = TRUE THEN
			State := 50;
		END_IF

	50://move crane up
		q_VerticalMotor.MoveLeft := TRUE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;
		
		q_Grab := TRUE;
		
		IF i_CraneUpSensor.Blocked = TRUE THEN
			State := 60;
		END_IF

	60://move crane to output position
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := TRUE;
		q_HorizontalMotor.MoveRight := FALSE;
		
		q_Grab := TRUE;
		
		IF i_CraneAboveInput.Blocked = TRUE THEN
			State := 70;
		END_IF

	70://move crane down
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := TRUE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;	
	
		IF i_CraneDownSensor.Blocked = TRUE THEN
			State := 80;
		END_IF

	80://release load
		q_Grab := FALSE;
		IF i_LoadGrabbed = FALSE THEN
			State := 90;
		END_IF

	90://move crane up
		q_VerticalMotor.MoveLeft := TRUE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := FALSE;	
		
		IF i_CraneUpSensor.Blocked = TRUE THEN
			State := 100;
		END_IF	

	100://move crane over input
		q_VerticalMotor.MoveLeft := FALSE;
		q_VerticalMotor.MoveRight := FALSE;
		q_HorizontalMotor.MoveLeft := FALSE;
		q_HorizontalMotor.MoveRight := TRUE;
		
		IF i_CraneAboveInput.Blocked = TRUE THEN
			State := 20;
		END_IF
END_CASE
END_IF			]]></ST>
    </Implementation>
    <LineIds Name="MOD_Crane">
      <LineId Id="213" Count="1" />
      <LineId Id="216" Count="0" />
      <LineId Id="285" Count="2" />
      <LineId Id="249" Count="0" />
      <LineId Id="218" Count="5" />
      <LineId Id="282" Count="2" />
      <LineId Id="225" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="226" Count="2" />
      <LineId Id="279" Count="2" />
      <LineId Id="230" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="238" Count="2" />
      <LineId Id="237" Count="0" />
      <LineId Id="301" Count="1" />
      <LineId Id="235" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="211" Count="1" />
      <LineId Id="10" Count="1" />
      <LineId Id="20" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="208" Count="1" />
      <LineId Id="207" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="292" Count="3" />
      <LineId Id="30" Count="0" />
      <LineId Id="296" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="35" Count="5" />
      <LineId Id="131" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="45" Count="4" />
      <LineId Id="53" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="54" Count="2" />
      <LineId Id="63" Count="1" />
      <LineId Id="123" Count="1" />
      <LineId Id="200" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="69" Count="1" />
      <LineId Id="126" Count="1" />
      <LineId Id="129" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="132" Count="2" />
      <LineId Id="77" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="78" Count="1" />
      <LineId Id="74" Count="0" />
      <LineId Id="81" Count="4" />
      <LineId Id="80" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="135" Count="2" />
      <LineId Id="89" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="86" Count="0" />
      <LineId Id="100" Count="1" />
      <LineId Id="138" Count="2" />
      <LineId Id="102" Count="0" />
      <LineId Id="195" Count="0" />
      <LineId Id="103" Count="1" />
      <LineId Id="98" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="291" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>